#!/usr/bin/python3
#	ripmachine - GUI-driven CD/DVD ripper
#	Copyright (C) 2019-2019 Johannes Bauer
#
#	This file is part of ripmachine.
#
#	ripmachine is free software; you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation; this program is ONLY licensed under
#	version 3 of the License, later versions are explicitly excluded.
#
#	ripmachine is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with ripmachine; if not, write to the Free Software
#	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#	Johannes Bauer <JohannesBauer@gmx.de>

import os
import sys
import json
import collections
from FriendlyArgumentParser import FriendlyArgumentParser
from GnuplotFile import GnuplotFile

parser = FriendlyArgumentParser()
parser.add_argument("-o", "--outfile", metavar = "png_filename", default = "speedgraph.png", help = "Output plot to this file. Defaults to %(default)s.")
parser.add_argument("statefile", metavar = "state_json", nargs = "+", type = str, help = "State file(s) to plot")
args = parser.parse_args(sys.argv[1:])

_PlotFile = collections.namedtuple("PlotFile", [ "start", "data" ])
def read_plotfile(filename):
	with open(filename) as f:
		data = json.load(f)
	return _PlotFile(start = data["runtime"]["start"]["unix"], data = data["graph"])

plotfiles = [ read_plotfile(filename) for filename in args.statefile ]
min_start = min(plotfile.start for plotfile in plotfiles)

gpl = GnuplotFile(xlabel = "Time (secs)", ylabel = "Data (MiB)", grid = True)
gpl.ytickmirror = False

for (plot_id, plotfile) in enumerate(plotfiles, 1):
	data = [ (x + plotfile.start - min_start, y / 1024 / 1024) for (x, y) in plotfile.data ]
	gpl.add_dataset(data, title = "Plot %d" % (plot_id))

gpl.render_pngfile(args.outfile)
